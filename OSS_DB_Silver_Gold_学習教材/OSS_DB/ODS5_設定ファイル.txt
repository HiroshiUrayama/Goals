ここがヤバい
表を一式全部暗記したら問題ない
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
'Postgresql.auto.conf
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
バージョン9.4で新機能として追加
ALTER SYSTEMコマンドによって操作されるファイル。
パラメータ値を設定すると、Postgresql.auto.confファイルに書き込まれる。

使える人：スーパーユーザ

ALTER SYSTEM SET パラメータ名 TO{設定値 | DEFAULT};
ALTER SYSTEM SET パラメータ名 = {設定値 | DEFAULT};
↑で変更したあとにpg_ctl restartをすると設定が反映される

Postgresql.confファイルの読み込み時に上書きされる
    同じパラメータが設定されている場合は、Postgresql.auto.confファイルの内容が優先。

    ×SETコマンドで設定値が変更可能
    ×データベースクラスタのbaseファイルに配置
        Postgresql.confファイルと同じで、
        baseフォルダよりも1階層上の、
        データベースクラスタ直下に配置。
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
'Postgresql.conf
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    配置：データベースクラスタ作成時にデータベースクラスタに対して作成される。
        パラメータの値もデータベースクラスタごと。
    
    ログ出力に関するパラメータが多数ある。
    PostgreSQLの全体の動作を制御するパラメータ。
        ※手動で書き換えて、pg_ctl restartコマンドで設定反映が可能
        ※手動時は、Postgresql.confを直接テキストエディタで開ける。
        ※統計情報のログを出力するパラメータはない。
        ※ログ関連のパラメータは、デフォルトでログが出力されない設定になっている。
            →運用時に利用できるように変更しておくことが推奨されている。

    'ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    ’設定方法
    'ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
        ・パラメータは1行に一つずつ
        ・大文字・小文字の区別はない
        ・パラメータ名の後の、イコール(=)は省略可能
        ・#から行末まではコメントを意味する(#はどこから始まっても良い)
        ・パラメータの値は、booblean型、整数型、浮動小数点、文字列の4つ
        ・boolean値はon,off,true,false,yes,no,1,0である
        ・有効なメモリの単位はkB(キロバイト),MB(メガバイト),GB(ギガバイト),TB(テラバイト)
            メモリの定数は1024である
        ・時間の設定値は、ms(ミリ秒),s(秒),min(分),h(時間),d(日)を設定可能

            ※デフォルトの単位は、各パラメータごとに設定されている。
            ※単位を指定しない場合はデフォルトの単位が指定される。
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    'ログメッセージの主なレベル(サーバログに書き込むログレベル)
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    log_min_messagesパラメータで設定。
    
    ・INFO
        ユーザから出力を要求された情報
    ・NOTICE
        ユーザにとって役立つ情報
    ・WARNING(デフォルト)
        不適切なコマンド使用などに対するユーザへの警告
    ・ERROR
        特定のコマンドを中断させたエラー
    ・LOG
        データベース管理者にとって役立つ、パフォーマンスや内部の処理に対する情報
    ・FATAL
        特定のセッションを中断させたエラー
    ・PANIC
        全てのセッションを中断させた致命的なエラー
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    'サーバのパラメータ値を取得するビュー(pg_settingsビュー)
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    できる人：誰でも
    UPDATE文で更新が可能。

    nameカラム：対象のパラメータ名
    settingカラム：現在のパラメータ値
        settingカラムを変更するとSETコマンドの実行と同じようにパラメータ値が変更される。
    
    ’ーーーーーーーーーーーーーーーーーーーーーーーーー
    contextカラム：パラメータ値の反映に必要な操作
    ’ーーーーーーーーーーーーーーーーーーーーーーーーー
    internal ... データベースクラスタの構築後は変更できない
    postmaster ... PostgreSQLサーバの起動・再起動
    sighup ... 「Postgresql.conf」の再読み込み
    superuser-backend ... スーパユーザで新しいセッションを開始
    backend ... 一般ユーザで新しいセッションを開始
    superuser ... スーパユーザでSETコマンド実行
    user ... 一般ユーザでSETコマンド実行

    image
    name        setting     context
    なんとか       かんとか     　userとか
                                    ↑一般ユーザでSETコマンド実行で変更可能    

    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    '再読み込みによって設定が変更されるもの
    ’Postgresql.confの各種値
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    ・log_filename
    ・log_directory

    ※全てのパラメータは、大文字、小文字を区別しない。
    

    分類                パラメータ                                  説明                                                                    デフォルト                                                      起動        再読み込み      SETコマンド(SU) SETコマンド(一般)
    
    <接続系は、起動時にしか設定が反映されない>
    接続                listen_addresses                    接続要求を受け付けるPostgreSQLサーバ自身のIPアドレス    localhost                                                      ○                -               -                       -
    接続                port                                      接続を待ち受けるポート番号                                         5432                                                           ○                -              -                       -
    接続                max_connections                 　PostgreSQLに同時に接続が可能である、接続数の最大値     100                                                            ○                -              -                       -
    
    <クライアント接続系は、一般ユーザのSETコマンドで反映される>
    クライアント接続    search_path                         予めスキーマ名を省略されたテーブルを検索するためのパス          '"$user",public'                                            ○               ○              ○                    ○
    クライアント接続    default_transaction_isolation   新しいトランザクションのデフォルトの分離レベル                      read committed                                          ○               ○               ○                   ○
    クライアント接続    cliet_encoding                      クライアントのエンコーディング                                              'SQL_ASCII'                                             ○           　    ○             ○                   ○
    
    <ログ系は、様々>
    ログ                  log_destination                       PostgreSQLサーバのログ出力先                                    stderr                                                      ○             　  ○             -                       -
    ログ                  logging_collector                     標準エラーをファイルに書き出すかどうか                              off                                                            ○                -               -                       -   
    ログ                  log_directory                         ログファイルを格納するディレクトリ                                      log                                                            ○                ○               -                       -
    ログ                  log_connections                       クライアント情報をサーバログに出力するかどうか                    off                                                            ○                ○             ○                       -
    ログ                  log_min_messages                  サーバログに書き込むログのレベル                                    WARNING                                                 ○                 ○             ○                       -
    ログ                  log_filename                          サーバログを書き込むファイルのファイル名                             postgresql-%Y-%m-%d_%H%M%S.log        ○                ○              -                        -
    ログ                  log_line_prefix                       サーバログメッセージの行頭の書式文字列                              '%m [%p]'                                              ○                ○               -                       -
    ログ                  log_statement                         サーバログに書き込むSQL文の種類                                 none                                                          ○             ○                  ○                    -
    ’-------------------------------------------
    'パラメータの設定内容を表示する(SHOWコマンド)
    ’-------------------------------------------
    SHOW {パラメータ名 | ALL};
    SHOW ALL    
        全ての設定パラメータの値とその説明を表示する
    SHOW search_path
        search_pathの設定とその説明を表示する

    ’-------------------------------------------
    'listen_addresses(接続)
    ’-------------------------------------------
    クライアントからの接続要求を受け付けるPostgreSQLサーバ自身へのIPアドレスを指定。
    データベースクラスタの初期化後も変更可能。
    変更した設定値は、PostgreSQLサーバの起動、再起動で反映される。
    デフォルト値はlocalhost
    '*'を指定した場合は、全てのIPアドレスで接続を待ち受ける。

    ’-------------------------------------------
    'max_connections(接続)
    ’-------------------------------------------
    設定値を超えて接続しようとするとエラーが発生し、接続できなくなる。

    ’-------------------------------------------
    'default_transaction_isolation(クライアント接続)
    ’-------------------------------------------
    新しいトランザクションのデフォルトの分離レベルを設定する。
        分離レベル=他のトランザクションが同時に実行された場合に、
        どの程度の影響を受けるかを指定する度合いのこと。

        1.read uncommitted
        2.read committed
        3.repeatable read
        4.serializable
    ’-------------------------------------------
    'log_destination
    ’-------------------------------------------
    PostgreSQLサーバのログ出力先を設定する。
        stderr ... サーバログを平文で標準エラー出力に出力する
        csvlog ... サーバログをcsv形式で標準出力に出力する
                    ※ただし、loging_collectorをonに設定する必要がある
        syslog ... サーバログをsyslogに出力

        ※デフォルト値はstrerr。
        
        ※パラメータにoffは設定できない。
        ※出力されるログはサーバログ
        ※ログファイルでなく、標準エラー出力に出力する。

    ’-------------------------------------------
    'SET
    ’-------------------------------------------
    PostgreSQLの稼働中にパラメータの設定を変更するコマンド。
    変更するコマンドであって、表示するコマンド(SHOW)ではない。

    コマンドを実行したセッションのみで有効(デフォルト)。

    ×\setコマンドでも同じことができる
        できない。\setコマンドはSETコマンドで行うようなPostgreSQLのパラメータ変更は不可能。
        「PATH」などの環境変数を設定する場合に使用する。

    書式
        SET パラメータ名 TO {設定値 | DEFAULT};
        SET パラメータ名 = {設定値 | DEFAULT};
            パラメータは、SESSIONとLOCALの2つを設定できる。
                ・SETTION(デフォルト)：SETコマンドの有効範囲を現在のセッションのみにする設定。
                ・LOCAL：SETコマンドの有効範囲を、現在のトランザクションのみにする設定。
                ×GLOBALという設定はない。
        
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    'pg_hba.conf
    ’クライアント認証ができるかどうかを決めている？
    ’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
    データベースクラスタ作成時に作られる

    データベースクラスタ内にある設定ファイル
        一般的な書式：1行につき1つのレコードというレコードの集合体のこと。
            ◇クライアントから接続を受ける
                    接続方式
                    クライアントIPアドレス
                    接続先のデータベース名
                    接続に使用するユーザ名
                        ↑pg_hba.confファイルに記述されたレコードに一致するかどうかを確認する。
                            一致する行がない場合は接続を拒否する
                            接続先のテーブルごとに、クライアント認証の設定はできない。
    ’ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    'pg_hba.confの主な認証方式
    ’ーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
    1.trust     　常に許可
    2.reject      常に拒否
    3.md5       MD5で暗号化されたパスワード認証を行う
    4.password 暗号化されていない平分でのパスワード認証を行う

    <pg_hba.confの書式>
        【UNIXドメインを使用した接続(IPアドレスできたらこちらは使われない】
            ①local データベース名 ユーザ名 認証方式  

        【TCP/IPを使用した接続】
            ②host データベース名 ユーザ名 IPアドレス サブネットマスク 認証方式
            ③host データベース名 ユーザ名 CIDRアドレス 認証方式

            接続先のデータベース名
            接続に使用するユーザ名
                カンマ区切りで表記することによって複数指定できる

                ★順次処理なので、②で認証/否認になったら次のレコードは見ない。

    CIDR形式の代替として、IPアドレスとサブネットマスクを使用する表記も可能。

    例1
    local all all trust →UNIXドメインを使用した接続
    host all all 192.168.1.1./32 reject
        00000000,00000000,00000000,00000001
        192         ,168         ,1             ,1              がreject
    host all all 192.168.1.0/24 trust
        00000000,00000000,00000000,11111111はOK
        192,        ,168         ,1             ,1～254まではOK

    ↑接続できるのは192,168,1,2～254まで

    例2     trustがパスワード認証なし。
            md5はパスワード認証あり。
    【UNIX】
    ①local all all trust

    【TCP/IP】
    ②host all all 192.168.1.0/24 md5
        md5で暗号化されたパスワード認証を行うIPアドレスを指定。
        CIDRアドレスから上位24ビットが固定される
        パスワード認証が行われるIPアドレスは
            192.168.1.1　～　192.168.1.254まで。
    ③host all all 192.168.0.0/16 reject
        接続を拒否するIPアドレスを指定。
        CIDRアドレスから上位16ビットが固定。
        よって、接続が拒否されるIPアドレスは
            192.168.0.1　～　192.168.255.255まで。

    

’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
’スキーマ
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
多数のデータベースの格納先を、テーブルの目的や所有者に応じて分類する仕組み。

’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
’エラー文
’＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
【psql】
    psql: FETAL: password authentication failed for user "postgres"
        Postgreユーザのクライアント認証が定義されていない

    psql -h test.server.co.jp -U postgres
    psql: could not translate host name "test.server.co.jp" to address: nodename nor servname provided, or not known
        postgresが名前解決されていない

    psql -U postgres testdb
    psql: FATAL: nopg_hda.conf entry for host "[local]", user "postgres", database "testdb", SSL off 
        postgresユーザのクライアント認証が定義されていない

    psql: could not connect to server: connection refused
    Is the server runnning on host "test.server.co.jp" and accepting
    TCP/IP connections on port 5432?

    PostgreSQLサーバが5432のポートで稼働していない
    or
    PostgreSQLサーバが"test.server.co.jp"で稼働していない

    5432で稼働していないか、TCP/IP接続が許可されていない